library(dada2)
# Your path to the raw reads here:
path <- "../data"
# Path to the outputs of the pipeline:
path_results <- ""file.path("..", "greuk")
if(!dir.exists(path_results)) dir.create(path_results)
# Path to the outputs of the pipeline:
path_results <- file.path("..", "greuk")
if(!dir.exists(path_results)) dir.create(path_results)
# Path to the outputs of the pipeline:
path_results <- file.path("..", "greuk")
if(!dir.exists(path_results)) dir.create(path_results)
library('phyloseq')
library('ggplot2')
# We import the ASV table, the taxonomic assignment results and the sequences from the text files we exported in the dada2 practical.
# Define where the previous practical outputs are located:
input_dir <- file.path("..", "results")
# Create directory for plots:
path_plots <- file.path("..", "plots")
if(!dir.exists(path_plots)) dir.create(path_plots)
#Import the ASV table:
asv_table <- read.table(file = file.path(input_dir, "asv_table.tsv"),
header = TRUE,
sep = "\t",
row.names = 1)
# the results of the taxonomic assignment:
taxonomy <- read.table(file = file.path(input_dir, "taxonomy.tsv"),
header = TRUE,
sep = "\t",
row.names = 1)
# and the ASV sequences:
asv_seq <- Biostrings::readDNAStringSet(
filepath = file.path(input_dir, "asv.fasta"),
format = "fasta"
)
# We will also need some information about the samples, the file is located is another folder.
second_batch <- read.csv(file.path(input_dir, "Seq_Tables_from_dada2_TM_13.3.2024.csv"))
rownames(context) <- second_batch$ID
# Same thing for context file:
data_dir <- file.path("..", "data")
# We will also need some information about the samples, the file is located is another folder.
second_batch <- read.csv(file.path(data_dir, "Seq_Tables_from_dada2_TM_13.3.2024.csv"))
# We will also need some information about the samples, the file is located is another folder.
second_batch <- read.csv(file.path(data_dir, "Seq_Tables_from_dada2_TM_13.3.2024.csv"))
rownames(context) <- second_batch$ID
context <- second_batch$ID
contex
context
# We will also need some information about the samples, the file is located is another folder.
context <- read.csv(file.path(data_dir, "Seq_Tables_from_dada2_TM_13.3.2024.csv"))
rownames(context) <- context$ID
### Check sample file
# Make sure sample names in the ASV table…
colnames(asv_table) |> sort()
# We will also need some information about the samples, the file is located is another folder.
context <- read.csv(file.path(data_dir, "Seq_Tables_from_dada2_TM_13.3.2024.csv"))
context
rownames(context) <- context$ID
context
### Check sample file
# Make sure sample names in the ASV table…
colnames(asv_table) |> sort()
# match sample table ids.
row.names(context) |> sort()
# You can do it in a more formal way using the function setdiff(). This function returns the elements of x not present in y.
setdiff(x = colnames(asv_table),
y = row.names(context))
character(0)
physeq <- phyloseq::phyloseq(
phyloseq::otu_table(asv_table, taxa_are_rows = TRUE),
phyloseq::tax_table(as.matrix(taxonomy)),
phyloseq::sample_data(context),
phyloseq::refseq(asv_seq)
)
physeq
### Make the barplot
barplot(physeq@otu_table)
# Make plot on the taxonomic distribution of the top 20 samples.
theme_set(theme_bw())
# Make plot on the taxonomic distribution of the top 20 samples.
theme_set(theme_bw())
ps <- physeq
OTU <- otu_table
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="")
ggsave(path = path_plots, filename="abundance_Lifespot_2nd_Silva_top20.png")
phyloseq::plot_bar(physeq, x="Description", fill="Genus")
ggsave(path = path_plots, filename="abundance_Lifespot_2nd_Silva.png")
ggsave(path = path_plots, filename="plot_abundance_top20.png")
ggsave(path = path_plots, filename="plot_abundance.png")
if (!requireNamespace("ggplot2", quietly = TRUE)) {
install.packages("ggplot2")
}
# Make plot on the taxonomic distribution of the top 20 samples.
theme_set(theme_bw())
ps <- physeq
OTU <- otu_table
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="")
ggsave(path = path_plots, filename="plot_abundance_top20.png")
phyloseq::plot_bar(physeq, x="Description", fill="Genus")
ggsave(path = path_plots, filename="plot_abundance.png")
phyloseq::plot_bar(ps.top20, fill="Genus", title="")
# Create directory for plots:
path_plots <- file.path("..", "plots")
phyloseq::plot_bar(ps.top20, fill="Genus", title="")
ggsave(path = path_plots, filename="plot_abundance_detailstop20.png")
physeq
sample_data(physeq)
phyloseq::plot_bar(ps.top20, x="graphic_ID" , fill="Genus", title="")
phyloseq::plot_bar(ps.top20, x="Graphic_ID" , fill="Genus", title="")
phyloseq::plot_bar(ps.top20, fill="Genus", title="")
phyloseq::plot_bar(ps.top20, x="graphic_ID", fill="Genus", title="")
ps.top20
context
physeq
sample_data(physeq)
ggplot(sample_data, aes(x = Graphic_ID)) +
geom_bar() +
labs(x = "Graphic ID", y = "Count", title = "Barplot of Graphic IDs")
plot_bar(physeq, x = "Graphic_ID")
plot_bar(physeq, x = "Graphic_ID", y="Count")
plot_bar(physeq, x = "Description")
physeq
sample_data(physeq)
plot_bar(physeq, x = "Sample_type")
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="")
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="")
#
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="")
phyloseq::plot_bar(physeq, x="Description", fill="Genus")
# General top 20 ASVs abundance across sample batch:
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance")
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ")
ggsave(path = path_plots, filename="plot_abundance_details_top20.png")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, x="Description", fill="Genus", title="All ASVs Genus abundance ")
ggsave(path = path_plots, filename="plot_abundance.png")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, fill="Genus", title="All ASVs Genus abundance ")
ggsave(path = path_plots, filename="plot_abundance_details.png")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, fill="Genus", title="All ASVs Genus abundance ", xlab = "")
# Loading libraries:
library('phyloseq')
library('ggplot2')
# We import the ASV table, the taxonomic assignment results and the sequences from the text files we exported in the dada2 practical.
# Define where the previous practical outputs are located:
input_dir <- file.path("..", "results")
# Same thing for context file:
data_dir <- file.path("..", "data")
# Create directory for plots:
path_plots <- file.path("..", "plots")
if(!dir.exists(path_plots)) dir.create(path_plots)
#Import the ASV table:
asv_table <- read.table(file = file.path(input_dir, "asv_table.tsv"),
header = TRUE,
sep = "\t",
row.names = 1)
# the results of the taxonomic assignment:
taxonomy <- read.table(file = file.path(input_dir, "taxonomy.tsv"),
header = TRUE,
sep = "\t",
row.names = 1)
# and the ASV sequences:
asv_seq <- Biostrings::readDNAStringSet(
filepath = file.path(input_dir, "asv.fasta"),
format = "fasta"
)
# We will also need some information about the samples, the file is located is another folder.
context <- read.csv(file.path(data_dir, "Seq_Tables_from_dada2_TM_13.3.2024.csv"))
rownames(context) <- context$ID
### Check sample file
# Make sure sample names in the ASV table…
colnames(asv_table) |> sort()
# match sample table ids.
row.names(context) |> sort()
# You can do it in a more formal way using the function setdiff(). This function returns the elements of x not present in y.
setdiff(x = colnames(asv_table),
y = row.names(context))
character(0)
physeq <- phyloseq::phyloseq(
phyloseq::otu_table(asv_table, taxa_are_rows = TRUE),
phyloseq::tax_table(as.matrix(taxonomy)),
phyloseq::sample_data(context),
phyloseq::refseq(asv_seq)
)
### Make the barplot
barplot(physeq@otu_table)
heatmap(physeq@otu_table,
col = terrain.colors(100),  # Specify the color palette
scale = "row",  # Scale the rows
Rowv = NA,  # Disable row clustering
Colv = NA,  # Disable column clustering
main = "Heatmap of OTU Counts")  # Add a title
# Make plot on the taxonomic distribution of the top 20 samples.
theme_set(theme_bw())
ps <- physeq
OTU <- otu_table
# General top 20 ASVs abundance across sample batch:
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance")
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ")
ggsave(path = path_plots, filename="plot_abundance_details_top20.png")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, x="Description", fill="Genus", title="All ASVs Genus abundance ")
ggsave(path = path_plots, filename="plot_abundance.png")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, fill="Genus", title="All ASVs Genus abundance ", xlab = "")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, fill="Genus", title="All ASVs Genus abundance ")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_details_top20.png")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, x="Description", fill="Genus", title="All ASVs Genus abundance ") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance.png")
# General abundance for all ASVs
phyloseq::plot_bar(physeq, fill="Genus", title="All ASVs Genus abundance ") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_details.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
ps
OTU
top20
# General top 20 ASVs abundance across sample batch:
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:100]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
# General top 20 ASVs abundance across sample batch:
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:50]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
# General top 20 ASVs abundance across sample batch:
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_details_top20.png")
ps
physeq@otu_table
physeq
sample_data(physeq)
physeq
# Loading libraries:
library('phyloseq')
library('ggplot2')
# We import the ASV table, the taxonomic assignment results and the sequences from the text files we exported in the dada2 practical.
# Define where the previous practical outputs are located:
input_dir <- file.path("..", "results")
# Same thing for context file:
data_dir <- file.path("..", "data")
# Create directory for plots:
path_plots <- file.path("..", "plots")
if(!dir.exists(path_plots)) dir.create(path_plots)
#Import the ASV table:
asv_table <- read.table(file = file.path(input_dir, "asv_table.tsv"),
header = TRUE,
sep = "\t",
row.names = 1)
# the results of the taxonomic assignment:
taxonomy <- read.table(file = file.path(input_dir, "taxonomy.tsv"),
header = TRUE,
sep = "\t",
row.names = 1)
# and the ASV sequences:
asv_seq <- Biostrings::readDNAStringSet(
filepath = file.path(input_dir, "asv.fasta"),
format = "fasta"
)
# Second one:
context <- read.csv(file.path(data_dir, "ACA17_samples_sites.csv"))
rownames(context) <- context$ID
### Check sample file
# Make sure sample names in the ASV table…
colnames(asv_table) |> sort()
# match sample table ids.
row.names(context) |> sort()
# You can do it in a more formal way using the function setdiff(). This function returns the elements of x not present in y.
setdiff(x = colnames(asv_table),
y = row.names(context))
context
# Second one:
context <- read.csv(file.path(data_dir, "ACA17_samples_sites.csv"))
rownames(context) <- context$ACA_ID
### Check sample file
# Make sure sample names in the ASV table…
colnames(asv_table) |> sort()
# match sample table ids.
row.names(context) |> sort()
# You can do it in a more formal way using the function setdiff(). This function returns the elements of x not present in y.
setdiff(x = colnames(asv_table),
y = row.names(context))
character(0)
physeq <- phyloseq::phyloseq(
phyloseq::otu_table(asv_table, taxa_are_rows = TRUE),
phyloseq::tax_table(as.matrix(taxonomy)),
phyloseq::sample_data(context),
phyloseq::refseq(asv_seq)
)
### Make the barplot
barplot(physeq@otu_table)
heatmap(physeq@otu_table,
col = terrain.colors(100),  # Specify the color palette
scale = "row",  # Scale the rows
Rowv = NA,  # Disable row clustering
Colv = NA,  # Disable column clustering
main = "Heatmap of OTU Counts")  # Add a title
# Make plot on the taxonomic distribution of the top 20 samples.
theme_set(theme_bw())
ps <- physeq
OTU <- otu_table
# General top 20 ASVs abundance across sample batch:
top20 <- names(sort(taxa_sums(ps), decreasing=TRUE))[1:20]
ps.top20 <- transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
ps.top20 <- prune_taxa(top20, ps.top20)
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
phyloseq::plot_bar(ps.top20, x="Description", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20.png")
phyloseq::plot_bar(ps.top20, x="ACA_ID", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
physeq
# General abundance for all ASVs
phyloseq::plot_bar(physeq, x="Description", fill="Genus", title="All ASVs Genus abundance ") +
theme(axis.title.x=element_blank())
# General abundance for all ASVs
phyloseq::plot_bar(physeq, x="ACA_ID", fill="Genus", title="All ASVs Genus abundance ") +
theme(axis.title.x=element_blank())
# General abundance for all ASVs
phyloseq::plot_bar(physeq, fill="Genus", title="All ASVs Genus abundance ") +
theme(axis.title.x=element_blank())
phyloseq::plot_bar(ps.top20, x="ACA_ID", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="Sample_type", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
context
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="MS_CD", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
phyloseq::plot_bar(ps.top20, x="ID", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ps.top20
sample_data(ps.top20)
phyloseq::plot_bar(ps.top20, x=index, fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
phyloseq::plot_bar(ps.top20, fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
phyloseq::plot_bar(ps.top20, x="ACA_ID", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
sample_data(ps.top20)
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="MS_CD", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="MS_CD", fill="Genus", title="Top 20 ASVs abundance ") +
theme(axis.title.x=element_blank())
phyloseq::plot_bar(ps.top20, x="ACA_ID", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each samples:
phyloseq::plot_bar(ps.top20, x="MS_CD", fill="Genus", title="Top 20 ASVs abundance per location") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20_per_location.png")
phyloseq::plot_bar(ps.top20, x="ACA_ID", fill="Genus", title="Top 20 ASVs abundance") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20.png")
# Top 20 ASVs abundance for each sampling location:
# Column “MS-CD” = ACA site code (numerical)
phyloseq::plot_bar(ps.top20, x="MS_CD", fill="Genus", title="Top 20 ASVs abundance per location") +
theme(axis.title.x=element_blank())
ggsave(path = path_plots, filename="plot_abundance_top20_per_location.png")
